name: Build

on:
  pull_request:
    branches: [ main ]
  push:
    branches: ['main']
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-24.04
    env:
      VITE_API_ORIGIN: http://localhost:3000
      VITE_API_PATH: /api/v1/trpc
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
    services:
      postgres:
        image: postgres:17.0-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - run: npm ci
      - run: npm run typecheck -w=server
      - run: npm run typecheck -w=client
      - run: npm run lint -w=server
      - run: npm run lint -w=client
      - run: npm run test:unit -w=client
      - run: npm run migrate:latest -w=server
      - run: npm run coverage -w=server

      - name: Upload server test coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          files: ./server/src/coverage/*.json
          flags: unittests
          token: ${{ secrets.CODECOV_TOKEN }}
          codecov_yml_path: ./codecov.yml
          verbose: true
