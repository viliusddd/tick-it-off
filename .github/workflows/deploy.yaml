name: Build

on:
  pull_request:
    branches: [ main ]
  push:
    branches: ['main']
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - name: Install server dependencies
        working-directory: server/src
        run: npm install

      - name: Install client dependencies
        working-directory: client/src
        run: npm install

      - name: Run server linter
        working-directory: server/src
        run: npm run lint

      - name: Build server
        working-directory: server/src
        run: npm run build

      - name: Run client linter
        working-directory: client/src
        run: npm run lint

      - name: Run database migration
        working-directory: server/src
        run: npm run migrate:latest
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          PORT: ${{ vars.PORT }}

      - name: Run server unit tests with coverage
        working-directory: server/src
        run: npm run coverage
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          PORT: ${{ vars.PORT }}

      # - name: Run client unit tests with coverage
      #   working-directory: client/src
      #   run: npm run coverage
      #   env:
      #     DATABASE_URL: ${{ secrets.DATABASE_URL }}
      #     PORT: ${{ vars.PORT }}

      - name: Upload server test coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          files: ./server/src/coverage/*.json
          flags: unittests
          token: ${{ secrets.CODECOV_TOKEN }}
          codecov_yml_path: ./codecov.yml
          verbose: true

      # - name: Upload client test coverage reports to Codecov
      #   uses: codecov/codecov-action@v4
      #   with:
      #     fail_ci_if_error: true
      #     files: ./client/src/coverage/*.json
      #     flags: unittests
      #     token: ${{ secrets.CODECOV_TOKEN }}
